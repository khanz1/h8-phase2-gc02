{
  "name": "phase2-graded-challenge",
  "version": "1.0.0",
  "description": "Phase2 Graded Challenge - TypeScript Express.js Application",
  "main": "dist/server.js",
  "scripts": {
    "dev": "nodemon",
    "dev:old": "ts-node-dev --respawn --transpile-only -r tsconfig-paths/register src/server.ts",
    "build": "tsc",
    "start": "node dist/server.js",
    "db:migrate": "ts-node -r tsconfig-paths/register scripts/migration-runner.ts migrate",
    "db:rollback": "ts-node -r tsconfig-paths/register scripts/migration-runner.ts rollback",
    "db:reset": "ts-node -r tsconfig-paths/register scripts/migration-runner.ts reset",
    "db:check": "ts-node -r tsconfig-paths/register scripts/migration-runner.ts check",
    "db:seed": "ts-node -r tsconfig-paths/register scripts/seeder.ts seed --clear",
    "db:seed:clear": "ts-node -r tsconfig-paths/register scripts/seeder.ts clear",
    "db:seed:test": "ts-node -r tsconfig-paths/register scripts/seeder.ts test",
    "db:seed:undo": "ts-node -r tsconfig-paths/register scripts/seeder.ts undo",
    "db:seed:undo:truncate": "ts-node -r tsconfig-paths/register scripts/seeder.ts undo --truncate",
    "db:seed:undo:full": "ts-node -r tsconfig-paths/register scripts/seeder.ts undo --truncate --restart-identity --cascade --clear",
    "db:seed:truncate": "ts-node -r tsconfig-paths/register scripts/seeder.ts truncate --restart-identity",
    "db:reset:complete": "npm run db:reset && npm run db:seed:undo:full && npm run db:seed",
    "docker:dev": "docker-compose -f docker/docker-compose.yml up --build",
    "docker:dev:detached": "docker-compose -f docker/docker-compose.yml up --build -d",
    "docker:dev:down": "docker-compose -f docker/docker-compose.yml down",
    "docker:dev:logs": "docker-compose -f docker/docker-compose.yml logs -f",
    "docker:prod": "docker-compose -f docker/docker-compose.prod.yml up --build",
    "docker:prod:detached": "docker-compose -f docker/docker-compose.prod.yml up --build -d",
    "docker:prod:down": "docker-compose -f docker/docker-compose.prod.yml down",
    "docker:test": "./docker/docker-test.sh",
    "docker:clean": "docker system prune -f && docker volume prune -f",
    "docker:run": "./scripts/docker-run.sh",
    "docker:run:help": "./scripts/docker-run.sh --help",
    "docker:run:fresh": "./scripts/docker-run.sh --rebuild --migrate true --seed true",
    "docker:run:reset": "./scripts/docker-run.sh --migrate true --seed reset",
    "docker:run:complete": "./scripts/docker-run.sh --seed complete",
    "docker:run:clear": "./scripts/docker-run.sh --seed clear",
    "docker:run:no-init": "./scripts/docker-run.sh --migrate false --seed false",
    "docker:run:prod": "./scripts/docker-run.sh --env prod",
    "deploy:setup": "./scripts/deploy-setup.sh",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "type-check": "tsc --noEmit"
  },
  "keywords": [
    "typescript",
    "express",
    "sequelize",
    "postgresql",
    "jwt",
    "docker"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "bcrypt": "^5.1.1",
    "cloudinary": "^2.7.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^2.0.1",
    "pg": "^8.11.3",
    "pino": "^8.16.0",
    "pino-pretty": "^10.2.3",
    "sequelize": "^6.35.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.13",
    "@types/node": "^20.8.0",
    "@types/pg": "^8.15.4",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "eslint": "^8.52.0",
    "nodemon": "^3.1.10",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}
