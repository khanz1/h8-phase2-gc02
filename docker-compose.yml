services:
  postgres:
    image: postgres:15-alpine
    container_name: h8-phase2-gc02-postgres-dev
    environment:
      POSTGRES_DB: ${DB_NAME:-h8_phase2_gc02}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5001:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - h8-phase2-gc02-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-h8_phase2_gc02}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: h8-phase2-gc02-app-dev
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-8002}
      DB_HOST: postgres
      DB_PORT: 5432
      RUN_DB_SETUP: ${RUN_DB_SETUP:-true}
      RUN_DB_MIGRATE: ${RUN_DB_MIGRATE:-false}
    ports:
      - "${PORT:-8002}:${PORT:-8002}"
    volumes:
      - ./src:/app/src:ro
      - ./scripts:/app/scripts:ro
      - ./data:/app/data:ro
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - h8-phase2-gc02-network
    restart: unless-stopped

  migration:
    build:
      context: .
      dockerfile: Dockerfile
      target: migration
    container_name: h8-phase2-gc02-migration-dev
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./data:/app/data:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - h8-phase2-gc02-network
    profiles:
      - tools

networks:
  h8-phase2-gc02-network:
    driver: bridge

volumes:
  postgres_data:
