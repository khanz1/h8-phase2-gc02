{
  "info": {
    "_postman_id": "486814fc-76e4-4139-b3e7-b65dc5573947",
    "name": "Phase 2 - Multi-Platform Management API",
    "description": "Comprehensive API collection for a multi-platform management system with authentication, user management, and content operations. This API supports role-based access control (Admin, Staff, User) and provides both authenticated and public endpoints for blog, career, movie, news, product, rental, and restaurant content management.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "22247928",
    "_collection_link": "https://martian-zodiac-179198.postman.co/workspace/617a0e7e-e98a-42b6-8042-a5356865c9ca/collection/22247928-486814fc-76e4-4139-b3e7-b65dc5573947?action=share&source=collection_link&creator=22247928"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.environment.set('TOKEN', response.data.token);",
                  "        console.log('Token saved:', response.data.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "email",
                  "value": "{{EMAIL_ADMIN}}",
                  "description": "Admin user email",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "{{EMAIL_STAFF}}",
                  "description": "Staff user email",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "password",
                  "value": "123456",
                  "description": "User password (minimum 6 characters)",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{BASE_URL}}/apis/auth/login",
              "host": ["{{BASE_URL}}"],
              "path": ["apis", "auth", "login"]
            },
            "description": "Authenticate user and receive JWT token. Returns user profile and access token for subsequent API calls."
          },
          "response": []
        },
        {
          "name": "Create New User (Admin Only)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "username",
                  "value": "john_blogger",
                  "description": "Unique username (3-50 characters)",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "john.doe@techblog.com",
                  "description": "Valid email address",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "securePass123",
                  "description": "Password (minimum 6 characters)",
                  "type": "text"
                },
                {
                  "key": "role",
                  "value": "Staff",
                  "description": "User role: Admin, Staff, or User (defaults to Staff)",
                  "type": "text"
                },
                {
                  "key": "phoneNumber",
                  "value": "+1-555-0123",
                  "description": "Optional phone number",
                  "type": "text"
                },
                {
                  "key": "address",
                  "value": "123 Tech Street, San Francisco, CA 94105",
                  "description": "Optional address",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{BASE_URL}}/apis/auth/add-user",
              "host": ["{{BASE_URL}}"],
              "path": ["apis", "auth", "add-user"]
            },
            "description": "Create a new user account. Requires admin authentication. Creates user with specified role and returns user profile with JWT token."
          },
          "response": []
        }
      ],
      "description": "User authentication and management endpoints. Includes login functionality and user creation (admin only)."
    },
    {
      "name": "System Management",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/health",
              "host": ["{{BASE_URL}}"],
              "path": ["health"]
            },
            "description": "Check application health status including uptime, environment, and version information. Public endpoint with no authentication required."
          },
          "response": []
        },
        {
          "name": "Application Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/",
              "host": ["{{BASE_URL}}"],
              "path": [""]
            },
            "description": "Retrieve general application information including name, version, description, and available endpoints. Public endpoint with no authentication required."
          },
          "response": []
        },
        {
          "name": "Database Seed",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/apis/seed?code={{SEED_CODE}}&type=seed",
              "host": ["{{BASE_URL}}"],
              "path": ["apis", "seed"],
              "query": [
                {
                  "key": "code",
                  "value": "{{SEED_CODE}}",
                  "description": "Secret seed code (required for security)"
                },
                {
                  "key": "type",
                  "value": "seed",
                  "description": "Seed operation type: seed, re-seed, or empty (default: seed)"
                }
              ]
            },
            "description": "Populate database with initial data. Requires secret seed code for security. Use 'seed' to add data, 're-seed' to clear and repopulate, or 'empty' to clear all data."
          },
          "response": []
        },
        {
          "name": "Database Re-seed",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/apis/seed?code={{SEED_CODE}}&type=re-seed",
              "host": ["{{BASE_URL}}"],
              "path": ["apis", "seed"],
              "query": [
                {
                  "key": "code",
                  "value": "{{SEED_CODE}}",
                  "description": "Secret seed code (required for security)"
                },
                {
                  "key": "type",
                  "value": "re-seed",
                  "description": "Clear existing data and repopulate with fresh seed data"
                }
              ]
            },
            "description": "Clear all existing data and repopulate database with fresh seed data. This operation will permanently delete all current data and replace it with initial data."
          },
          "response": []
        }
      ],
      "description": "System management and utility endpoints including health checks, application info, and database seeding operations."
    },
    {
      "name": "Blog Management",
      "item": [
        {
          "name": "Posts",
          "item": [
            {
              "name": "Get All Posts",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/posts",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "posts"]
                },
                "description": "Retrieve all blog posts with author and category information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Post by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/posts/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "posts", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Blog post ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific blog post including author and category details."
              },
              "response": []
            },
            {
              "name": "Create New Post",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"The Future of Web Development: React vs Vue in 2024\",\n    \"content\": \"As we move into 2024, the debate between React and Vue.js continues to evolve. Both frameworks have matured significantly, offering developers powerful tools for building modern web applications. React maintains its position as the most popular framework, backed by Meta's continuous investment and a vast ecosystem. Meanwhile, Vue.js has gained traction with its gentle learning curve and excellent documentation.\\n\\nReact's strength lies in its flexibility and the robust ecosystem of libraries and tools. The introduction of React 18 with concurrent features has further solidified its position. On the other hand, Vue 3's Composition API brings a more functional approach while maintaining the framework's renowned simplicity.\\n\\nPerformance-wise, both frameworks are highly optimized. React's virtual DOM and Vue's reactivity system both deliver excellent user experiences. The choice often comes down to team expertise, project requirements, and long-term maintainability considerations.\\n\\nIn conclusion, both frameworks will continue to thrive in 2024, serving different needs in the development ecosystem.\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1633356122102-3fe601e05bd2?w=800\",\n    \"categoryId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/posts",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "posts"]
                },
                "description": "Create a new blog post. Requires Staff or Admin role. The post will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Post",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"The Future of Web Development: React vs Vue in 2024 (Updated)\",\n    \"content\": \"As we move into 2024, the debate between React and Vue.js continues to evolve with exciting new developments. Both frameworks have matured significantly, offering developers powerful tools for building modern web applications.\\n\\nReact maintains its position as the most popular framework, backed by Meta's continuous investment and a vast ecosystem. The recent updates to React 18 have introduced groundbreaking concurrent features that revolutionize how we think about rendering and user experience.\\n\\nMeanwhile, Vue.js has gained significant traction with its gentle learning curve and excellent documentation. Vue 3's Composition API brings a more functional approach while maintaining the framework's renowned simplicity and developer-friendly approach.\\n\\nPerformance benchmarks show both frameworks delivering exceptional results. React's virtual DOM reconciliation and Vue's fine-grained reactivity system both ensure optimal user experiences across different application scales.\\n\\nThe choice between these frameworks often comes down to team expertise, project requirements, ecosystem needs, and long-term maintainability considerations. Both will continue to thrive and evolve in 2024.\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1633356122102-3fe601e05bd2?w=1200\",\n    \"categoryId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/posts/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "posts", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Blog post ID to update"
                    }
                  ]
                },
                "description": "Update an existing blog post. Requires Staff/Admin role and ownership of the post (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Post Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/posts/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "posts", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Blog post ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the featured image for a blog post. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Post",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/posts/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "posts", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Blog post ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete a blog post. Requires Staff/Admin role and ownership of the post (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "Blog post management operations"
        },
        {
          "name": "Categories",
          "item": [
            {
              "name": "Get All Categories",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "categories"]
                },
                "description": "Retrieve all blog categories available in the system. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Category by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific category including associated blog posts."
              },
              "response": []
            },
            {
              "name": "Create Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Machine Learning",
                      "description": "Category name (2-100 characters, must be unique)",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "categories"]
                },
                "description": "Create a new blog category. Requires Admin role. Category names must be unique across the system."
              },
              "response": []
            },
            {
              "name": "Update Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Artificial Intelligence & Machine Learning",
                      "description": "Updated category name",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to update"
                    }
                  ]
                },
                "description": "Update an existing blog category. Requires Admin role. Updated name must remain unique."
              },
              "response": []
            },
            {
              "name": "Delete Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/blog/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "blog", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to delete"
                    }
                  ]
                },
                "description": "Delete a blog category. Requires Admin role. Cannot delete categories that have associated blog posts."
              },
              "response": []
            }
          ],
          "description": "Blog category management operations"
        },
        {
          "name": "Public Blog API",
          "item": [
            {
              "name": "Get Public Posts (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/blog/posts?q=react&i=technology,programming&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "blog", "posts"],
                  "query": [
                    {
                      "key": "q",
                      "value": "react",
                      "description": "Search in post titles (optional)"
                    },
                    {
                      "key": "i",
                      "value": "technology,programming",
                      "description": "Filter by category names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Posts per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated blog posts for public consumption. Supports search by title, category filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Post by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/blog/posts/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "blog", "posts", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Blog post ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific blog post including author and category information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/blog/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "blog", "categories"]
                },
                "description": "Retrieve all available blog categories for public use. Useful for building category filters and navigation. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for blog content consumption. No authentication required."
        }
      ],
      "description": "Protected blog content management endpoints. Requires authentication and appropriate permissions."
    },
    {
      "name": "Career Management",
      "item": [
        {
          "name": "Companies",
          "item": [
            {
              "name": "Get All Companies",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/companies",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "companies"]
                },
                "description": "Retrieve all career companies available in the system. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Company by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/companies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "companies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Company ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific company including associated job postings."
              },
              "response": []
            },
            {
              "name": "Create Company",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"TechCorp Solutions\",\n    \"companyLogo\": \"https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=400\",\n    \"location\": \"San Francisco, CA\",\n    \"email\": \"careers@techcorp-solutions.com\",\n    \"description\": \"TechCorp Solutions is a leading technology company specializing in innovative software solutions for enterprises. We're passionate about creating cutting-edge products that transform how businesses operate in the digital age. Our team of talented engineers, designers, and product managers work together to build scalable, reliable, and user-friendly applications that solve real-world problems.\\n\\nFounded in 2015, we've grown from a small startup to a company serving Fortune 500 clients worldwide. We foster a culture of innovation, continuous learning, and collaboration. Our modern office in downtown San Francisco provides an inspiring environment where creativity thrives and great ideas become reality.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/companies",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "companies"]
                },
                "description": "Create a new company profile. Requires Admin role. Company names and emails must be unique across the system."
              },
              "response": []
            },
            {
              "name": "Update Company",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"TechCorp Solutions Inc.\",\n    \"companyLogo\": \"https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=600\",\n    \"location\": \"San Francisco, CA\",\n    \"email\": \"careers@techcorp-solutions.com\",\n    \"description\": \"TechCorp Solutions Inc. is a leading technology company specializing in innovative software solutions for enterprises worldwide. We're passionate about creating cutting-edge products that transform how businesses operate in the digital age. Our diverse team of talented engineers, designers, and product managers work collaboratively to build scalable, reliable, and user-friendly applications that solve complex real-world problems.\\n\\nSince our founding in 2015, we've evolved from a small startup to a company serving Fortune 500 clients globally. We foster a culture of innovation, continuous learning, and collaboration while maintaining work-life balance. Our modern offices provide inspiring environments where creativity thrives and breakthrough ideas become reality.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/companies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "companies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Company ID to update"
                    }
                  ]
                },
                "description": "Update an existing company profile. Requires Admin role. Updated name and email must remain unique."
              },
              "response": []
            },
            {
              "name": "Delete Company",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/companies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "companies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Company ID to delete"
                    }
                  ]
                },
                "description": "Delete a company profile. Requires Admin role. Cannot delete companies that have associated job postings."
              },
              "response": []
            }
          ],
          "description": "Career company management operations"
        },
        {
          "name": "Jobs",
          "item": [
            {
              "name": "Get All Jobs",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/jobs",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "jobs"]
                },
                "description": "Retrieve all career job postings with company and author information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Job by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/jobs/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "jobs", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Job posting ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific job posting including company and author details."
              },
              "response": []
            },
            {
              "name": "Create New Job",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Senior Full-Stack Developer - React/Node.js\",\n    \"description\": \"Join our dynamic engineering team as a Senior Full-Stack Developer! We're looking for an experienced developer who is passionate about building scalable web applications using modern technologies.\\n\\n**Key Responsibilities:**\\n• Design and develop high-quality, scalable web applications using React, Node.js, and TypeScript\\n• Collaborate with cross-functional teams including product managers, designers, and other engineers\\n• Write clean, maintainable, and well-tested code following industry best practices\\n• Participate in code reviews and contribute to technical decision-making\\n• Mentor junior developers and contribute to team growth\\n• Work with cloud technologies (AWS/GCP) and containerization (Docker/Kubernetes)\\n\\n**Required Qualifications:**\\n• 5+ years of experience in full-stack development\\n• Strong proficiency in React, Node.js, JavaScript/TypeScript\\n• Experience with RESTful APIs and GraphQL\\n• Knowledge of database design (PostgreSQL, MongoDB)\\n• Familiarity with version control systems (Git)\\n• Experience with testing frameworks (Jest, Cypress)\\n\\n**Preferred Qualifications:**\\n• Experience with microservices architecture\\n• Knowledge of DevOps practices and CI/CD pipelines\\n• Familiarity with Agile development methodologies\\n• Experience with cloud platforms and containerization\\n\\n**What We Offer:**\\n• Competitive salary with equity options\\n• Comprehensive health, dental, and vision insurance\\n• Flexible work arrangements and remote work options\\n• Professional development budget for courses and conferences\\n• Modern office with latest technology and equipment\\n• Collaborative and inclusive work environment\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=800\",\n    \"jobType\": \"Full-time\",\n    \"companyId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/jobs",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "jobs"]
                },
                "description": "Create a new job posting. Requires Staff or Admin role. The job will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Job",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Senior Full-Stack Developer - React/Node.js (Remote Available)\",\n    \"description\": \"Join our dynamic engineering team as a Senior Full-Stack Developer! We're looking for an experienced developer who is passionate about building scalable web applications using modern technologies. This position now offers flexible remote work arrangements.\\n\\n**Key Responsibilities:**\\n• Design and develop high-quality, scalable web applications using React, Node.js, and TypeScript\\n• Collaborate with cross-functional teams including product managers, designers, and other engineers\\n• Write clean, maintainable, and well-tested code following industry best practices\\n• Participate in code reviews and contribute to technical decision-making\\n• Mentor junior developers and contribute to team growth\\n• Work with cloud technologies (AWS/GCP) and containerization (Docker/Kubernetes)\\n• Lead technical initiatives and architecture decisions\\n\\n**Required Qualifications:**\\n• 5+ years of experience in full-stack development\\n• Strong proficiency in React, Node.js, JavaScript/TypeScript\\n• Experience with RESTful APIs and GraphQL\\n• Knowledge of database design (PostgreSQL, MongoDB)\\n• Familiarity with version control systems (Git)\\n• Experience with testing frameworks (Jest, Cypress)\\n• Excellent communication skills for remote collaboration\\n\\n**Preferred Qualifications:**\\n• Experience with microservices architecture\\n• Knowledge of DevOps practices and CI/CD pipelines\\n• Familiarity with Agile development methodologies\\n• Experience with cloud platforms and containerization\\n• Previous remote work experience\\n\\n**What We Offer:**\\n• Competitive salary with equity options\\n• Comprehensive health, dental, and vision insurance\\n• Flexible work arrangements including full remote options\\n• Professional development budget for courses and conferences\\n• Home office setup allowance for remote workers\\n• Modern office access when desired\\n• Collaborative and inclusive work environment\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=1200\",\n    \"jobType\": \"Full-time\",\n    \"companyId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/jobs/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "jobs", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Job posting ID to update"
                    }
                  ]
                },
                "description": "Update an existing job posting. Requires Staff/Admin role and ownership of the job (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Job Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/jobs/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "jobs", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Job posting ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the featured image for a job posting. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Job",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/careers/jobs/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "careers", "jobs", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Job posting ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete a job posting. Requires Staff/Admin role and ownership of the job (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "Career job posting management operations"
        },
        {
          "name": "Public Career API",
          "item": [
            {
              "name": "Get Public Jobs (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/careers/jobs?q=developer&i=Sanska&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "careers", "jobs"],
                  "query": [
                    {
                      "key": "q",
                      "value": "developer",
                      "description": "Search in job titles (optional)"
                    },
                    {
                      "key": "i",
                      "value": "Sanska",
                      "description": "Filter by company names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Jobs per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated job postings for public consumption. Supports search by title, company name filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Job by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/careers/jobs/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "careers", "jobs", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Job posting ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific job posting including company and author information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Companies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/careers/companies",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "careers", "companies"]
                },
                "description": "Retrieve all available companies for public use. Useful for building company filters and exploring potential employers. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for career content consumption. No authentication required."
        }
      ],
      "description": "Protected career content management endpoints. Requires authentication and appropriate permissions."
    },
    {
      "name": "Movie Management",
      "item": [
        {
          "name": "Genres",
          "item": [
            {
              "name": "Get All Genres",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/genres",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "genres"]
                },
                "description": "Retrieve all movie genres available in the system. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Genre by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/genres/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "genres", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Genre ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific genre including associated movies."
              },
              "response": []
            },
            {
              "name": "Create Genre",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Sci-Fi",
                      "description": "Genre name (2-50 characters, must be unique)",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/genres",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "genres"]
                },
                "description": "Create a new movie genre. Requires Admin role. Genre names must be unique across the system."
              },
              "response": []
            },
            {
              "name": "Update Genre",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Science Fiction",
                      "description": "Updated genre name",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/genres/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "genres", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Genre ID to update"
                    }
                  ]
                },
                "description": "Update an existing movie genre. Requires Admin role. Updated name must remain unique."
              },
              "response": []
            },
            {
              "name": "Delete Genre",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/genres/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "genres", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Genre ID to delete"
                    }
                  ]
                },
                "description": "Delete a movie genre. Requires Admin role. Cannot delete genres that have associated movies."
              },
              "response": []
            }
          ],
          "description": "Movie genre management operations"
        },
        {
          "name": "Movies",
          "item": [
            {
              "name": "Get All Movies",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/movies",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "movies"]
                },
                "description": "Retrieve all movies with genre and author information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Movie by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Movie ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific movie including genre and author details."
              },
              "response": []
            },
            {
              "name": "Create New Movie",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Blade Runner 2049\",\n    \"synopsis\": \"Thirty years after the events of the first film, a new blade runner, LAPD Officer K, unearths a long-buried secret that has the potential to plunge what's left of society into chaos. K's discovery leads him on a quest to find Rick Deckard, a former LAPD blade runner who has been missing for 30 years.\\n\\nDirected by Denis Villeneuve and starring Ryan Gosling and Harrison Ford, this visually stunning sequel explores themes of identity, memory, and what it means to be human in a world where artificial beings are indistinguishable from real ones.\\n\\nThe film masterfully combines practical effects with cutting-edge CGI to create a believable dystopian future. Roger Deakins' cinematography creates a haunting atmosphere that perfectly complements the philosophical depth of the narrative. The score by Hans Zimmer and Benjamin Wallfisch builds upon Vangelis' iconic original soundtrack while adding modern sensibilities.\\n\\nBlade Runner 2049 successfully expands the universe while respecting the legacy of Ridley Scott's original masterpiece, delivering both spectacular action sequences and profound philosophical questions about consciousness and humanity.\",\n    \"trailerUrl\": \"https://www.youtube.com/watch?v=gCcx85zbxz4\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1489599735792-96064dc0a8e4?w=800\",\n    \"rating\": 8,\n    \"genreId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/movies",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "movies"]
                },
                "description": "Create a new movie entry. Requires Staff or Admin role. The movie will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Movie",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Blade Runner 2049: Director's Cut\",\n    \"synopsis\": \"Thirty years after the events of the first film, a new blade runner, LAPD Officer K, unearths a long-buried secret that has the potential to plunge what's left of society into chaos. K's discovery leads him on a quest to find Rick Deckard, a former LAPD blade runner who has been missing for 30 years.\\n\\nDirected by Denis Villeneuve and starring Ryan Gosling and Harrison Ford, this visually stunning sequel explores themes of identity, memory, and what it means to be human in a world where artificial beings are indistinguishable from real ones.\\n\\nThis Director's Cut features additional scenes that delve deeper into K's internal struggle and includes extended sequences that further explore the relationship between humans and replicants. The film masterfully combines practical effects with cutting-edge CGI to create a believable dystopian future.\\n\\nRoger Deakins' award-winning cinematography creates a haunting atmosphere that perfectly complements the philosophical depth of the narrative. The score by Hans Zimmer and Benjamin Wallfisch builds upon Vangelis' iconic original soundtrack while adding modern sensibilities.\\n\\nBlade Runner 2049 successfully expands the universe while respecting the legacy of Ridley Scott's original masterpiece, delivering both spectacular action sequences and profound philosophical questions about consciousness and humanity.\",\n    \"trailerUrl\": \"https://www.youtube.com/watch?v=gCcx85zbxz4\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1489599735792-96064dc0a8e4?w=1200\",\n    \"rating\": 9,\n    \"genreId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Movie ID to update"
                    }
                  ]
                },
                "description": "Update an existing movie entry. Requires Staff/Admin role and ownership of the movie (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Movie Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Movie ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the poster image for a movie. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Movie",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/movies/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "movies", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Movie ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete a movie entry. Requires Staff/Admin role and ownership of the movie (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "Movie management operations"
        },
        {
          "name": "Public Movie API",
          "item": [
            {
              "name": "Get Public Movies (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/movies/movies?q=shaw&i=action,sci-fi&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "movies", "movies"],
                  "query": [
                    {
                      "key": "q",
                      "value": "shaw",
                      "description": "Search in movie titles (optional)"
                    },
                    {
                      "key": "i",
                      "value": "action,sci-fi",
                      "description": "Filter by genre names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Movies per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated movies for public consumption. Supports search by title, genre name filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Movie by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/movies/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "movies", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Movie ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific movie including genre and author information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Genres",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/movies/genres",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "movies", "genres"]
                },
                "description": "Retrieve all available movie genres for public use. Useful for building genre filters and exploring movie categories. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for movie content consumption. No authentication required."
        }
      ],
      "description": "Protected movie content management endpoints. Requires authentication and appropriate permissions."
    },
    {
      "name": "News Management",
      "item": [
        {
          "name": "Categories",
          "item": [
            {
              "name": "Get All Categories",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "categories"]
                },
                "description": "Retrieve all news categories available in the system. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Category by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific category including associated articles."
              },
              "response": []
            },
            {
              "name": "Create Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Technology",
                      "description": "Category name (2-100 characters, must be unique)",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "categories"]
                },
                "description": "Create a new news category. Requires Admin role. Category names must be unique across the system."
              },
              "response": []
            },
            {
              "name": "Update Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Technology & Innovation",
                      "description": "Updated category name",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to update"
                    }
                  ]
                },
                "description": "Update an existing news category. Requires Admin role. Updated name must remain unique."
              },
              "response": []
            },
            {
              "name": "Delete Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to delete"
                    }
                  ]
                },
                "description": "Delete a news category. Requires Admin role. Cannot delete categories that have associated articles."
              },
              "response": []
            }
          ],
          "description": "News category management operations"
        },
        {
          "name": "Articles",
          "item": [
            {
              "name": "Get All Articles",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/articles",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "articles"]
                },
                "description": "Retrieve all news articles with category and author information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Article by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/articles/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "articles", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Article ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific news article including category and author details."
              },
              "response": []
            },
            {
              "name": "Create New Article",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"AI Revolution: OpenAI Announces GPT-5 with Unprecedented Capabilities\",\n    \"content\": \"In a groundbreaking announcement today, OpenAI revealed GPT-5, the latest iteration of their revolutionary language model series. This new model represents a quantum leap in artificial intelligence capabilities, promising to transform how we interact with technology across industries.\\n\\nGPT-5 introduces several game-changing features that set it apart from its predecessors. The model demonstrates unprecedented reasoning abilities, capable of handling complex multi-step problems with remarkable accuracy. Advanced multimodal capabilities allow it to seamlessly process and generate text, images, audio, and video content within a single conversation.\\n\\nThe new architecture incorporates breakthrough improvements in factual accuracy and reduced hallucinations, addressing one of the most significant challenges in previous AI models. GPT-5 can now maintain context across much longer conversations, remembering details from thousands of exchanges while adapting its communication style to individual users.\\n\\nIndustry applications are already showing tremendous promise. Healthcare professionals are using GPT-5 for advanced diagnostic assistance and treatment planning. Educational institutions are implementing it for personalized tutoring that adapts to each student's learning style and pace. Creative industries are leveraging its enhanced artistic capabilities for content generation and collaborative brainstorming.\\n\\nSafety and ethical considerations have been central to GPT-5's development. OpenAI has implemented robust safeguards and alignment techniques to ensure responsible AI behavior. The model undergoes continuous monitoring and includes built-in mechanisms to refuse harmful requests while providing helpful alternatives.\\n\\nThe release timeline indicates a gradual rollout starting with select partners and researchers, followed by broader availability through API access. OpenAI emphasizes their commitment to responsible deployment, ensuring thorough testing and feedback integration before widespread public access.\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1677442136019-21780ecad995?w=800\",\n    \"categoryId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/articles",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "articles"]
                },
                "description": "Create a new news article. Requires Staff or Admin role. The article will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Article",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"AI Revolution: OpenAI Announces GPT-5 with Unprecedented Capabilities (Updated)\",\n    \"content\": \"In a groundbreaking announcement today, OpenAI revealed GPT-5, the latest iteration of their revolutionary language model series. This new model represents a quantum leap in artificial intelligence capabilities, promising to transform how we interact with technology across industries.\\n\\nGPT-5 introduces several game-changing features that set it apart from its predecessors. The model demonstrates unprecedented reasoning abilities, capable of handling complex multi-step problems with remarkable accuracy. Advanced multimodal capabilities allow it to seamlessly process and generate text, images, audio, and video content within a single conversation.\\n\\nThe new architecture incorporates breakthrough improvements in factual accuracy and reduced hallucinations, addressing one of the most significant challenges in previous AI models. GPT-5 can now maintain context across much longer conversations, remembering details from thousands of exchanges while adapting its communication style to individual users.\\n\\nUpdate: Early beta testing results show even more impressive performance metrics than initially reported. The model's ability to understand nuanced context and provide relevant responses has exceeded expectations across all evaluation criteria.\\n\\nIndustry applications are already showing tremendous promise. Healthcare professionals are using GPT-5 for advanced diagnostic assistance and treatment planning. Educational institutions are implementing it for personalized tutoring that adapts to each student's learning style and pace. Creative industries are leveraging its enhanced artistic capabilities for content generation and collaborative brainstorming.\\n\\nSafety and ethical considerations have been central to GPT-5's development. OpenAI has implemented robust safeguards and alignment techniques to ensure responsible AI behavior. The model undergoes continuous monitoring and includes built-in mechanisms to refuse harmful requests while providing helpful alternatives.\\n\\nThe release timeline indicates a gradual rollout starting with select partners and researchers, followed by broader availability through API access. OpenAI emphasizes their commitment to responsible deployment, ensuring thorough testing and feedback integration before widespread public access.\",\n    \"imgUrl\": \"https://images.unsplash.com/photo-1677442136019-21780ecad995?w=1200\",\n    \"categoryId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/articles/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "articles", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Article ID to update"
                    }
                  ]
                },
                "description": "Update an existing news article. Requires Staff/Admin role and ownership of the article (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Article Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/articles/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "articles", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Article ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the featured image for a news article. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Article",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/news/articles/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "news", "articles", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Article ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete a news article. Requires Staff/Admin role and ownership of the article (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "News article management operations"
        },
        {
          "name": "Public News API",
          "item": [
            {
              "name": "Get Public Articles (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/news/articles?q=AI&i=technology,politics&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "news", "articles"],
                  "query": [
                    {
                      "key": "q",
                      "value": "AI",
                      "description": "Search in article titles (optional)"
                    },
                    {
                      "key": "i",
                      "value": "technology,politics",
                      "description": "Filter by category names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Articles per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated news articles for public consumption. Supports search by title, category name filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Article by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/news/articles/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "news", "articles", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Article ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific news article including category and author information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/news/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "news", "categories"]
                },
                "description": "Retrieve all available news categories for public use. Useful for building category filters and exploring different news topics. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for news content consumption. No authentication required."
        }
      ],
      "description": "Protected news content management endpoints. Requires authentication and appropriate permissions."
    },
    {
      "name": "Product Management",
      "item": [
        {
          "name": "Categories",
          "item": [
            {
              "name": "Get All Categories",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "categories"]
                },
                "description": "Retrieve all product categories available in the system. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Category by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific category including associated products."
              },
              "response": []
            },
            {
              "name": "Create Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Electronics",
                      "description": "Category name (2-100 characters, must be unique)",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "categories"]
                },
                "description": "Create a new product category. Requires Admin role. Category names must be unique across the system."
              },
              "response": []
            },
            {
              "name": "Update Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Consumer Electronics",
                      "description": "Updated category name",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to update"
                    }
                  ]
                },
                "description": "Update an existing product category. Requires Admin role. Updated name must remain unique."
              },
              "response": []
            },
            {
              "name": "Delete Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to delete"
                    }
                  ]
                },
                "description": "Delete a product category. Requires Admin role. Cannot delete categories that have associated products."
              },
              "response": []
            }
          ],
          "description": "Product category management operations"
        },
        {
          "name": "Products",
          "item": [
            {
              "name": "Get All Products",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/products",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "products"]
                },
                "description": "Retrieve all products with category and author information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Product by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/products/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "products", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Product ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific product including category and author details."
              },
              "response": []
            },
            {
              "name": "Create New Product",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n    \"name\": \"iPhone 15 Pro Max\",\\n    \"description\": \"The most advanced iPhone ever featuring the powerful A17 Pro chip with a pro-class GPU that delivers console-quality mobile gaming. Crafted from aerospace-grade titanium for an incredibly strong yet lightweight design.\\\\n\\\\nKey Features:\\\\n• 6.7-inch Super Retina XDR display with ProMotion technology\\\\n• A17 Pro chip with 6-core GPU for exceptional performance\\\\n• Professional camera system with 48MP main, ultra-wide, and telephoto lenses\\\\n• Action Button for quick access to your favorite features\\\\n• USB-C connectivity with support for USB 3 speeds\\\\n• All-day battery life with fast charging capabilities\\\\n• Durable titanium design with Ceramic Shield front\\\\n• iOS 17 with advanced privacy and security features\\\\n\\\\nAvailable in four stunning finishes: Natural Titanium, Blue Titanium, White Titanium, and Black Titanium. Perfect for professionals, creatives, and anyone who demands the best mobile technology.\",\\n    \"price\": 1199,\\n    \"stock\": 50,\\n    \"imgUrl\": \"https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=800\",\\n    \"categoryId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/products",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "products"]
                },
                "description": "Create a new product. Requires Staff or Admin role. The product will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Product",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n    \"name\": \"iPhone 15 Pro Max - 256GB\",\\n    \"description\": \"The most advanced iPhone ever featuring the powerful A17 Pro chip with a pro-class GPU that delivers console-quality mobile gaming. Crafted from aerospace-grade titanium for an incredibly strong yet lightweight design.\\\\n\\\\nUpdated Features:\\\\n• 6.7-inch Super Retina XDR display with ProMotion technology and Always-On display\\\\n• A17 Pro chip with 6-core GPU for exceptional performance and efficiency\\\\n• Professional camera system with 48MP main, ultra-wide, and telephoto lenses with 5x optical zoom\\\\n• Action Button for quick access to your favorite features and shortcuts\\\\n• USB-C connectivity with support for USB 3 speeds and DisplayPort\\\\n• All-day battery life with fast charging, wireless charging, and MagSafe\\\\n• Durable titanium design with Ceramic Shield front and IP68 water resistance\\\\n• iOS 17 with advanced privacy, security features, and new interactive widgets\\\\n\\\\nNow available with 256GB storage for enhanced capacity. Available in four stunning finishes: Natural Titanium, Blue Titanium, White Titanium, and Black Titanium. Perfect for professionals, creatives, and anyone who demands the best mobile technology.\",\\n    \"price\": 1299,\\n    \"stock\": 75,\\n    \"imgUrl\": \"https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=1200\",\\n    \"categoryId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/products/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "products", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Product ID to update"
                    }
                  ]
                },
                "description": "Update an existing product. Requires Staff/Admin role and ownership of the product (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Product Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/products/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "products", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Product ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the product image. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Product",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/products/products/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "products", "products", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Product ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete a product. Requires Staff/Admin role and ownership of the product (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "Product management operations"
        },
        {
          "name": "Public Product API",
          "item": [
            {
              "name": "Get Public Products (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/products/products?q=iPhone&i=electronics,gadgets&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "products", "products"],
                  "query": [
                    {
                      "key": "q",
                      "value": "iPhone",
                      "description": "Search in product names (optional)"
                    },
                    {
                      "key": "i",
                      "value": "electronics,gadgets",
                      "description": "Filter by category names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Products per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated products for public consumption. Supports search by name, category filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Product by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/products/products/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "products", "products", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Product ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific product including category and author information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/products/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "products", "categories"]
                },
                "description": "Retrieve all available product categories for public use. Useful for building category filters and exploring different product types. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for product content consumption. No authentication required."
        }
      ],
      "description": "Protected product content management endpoints. Requires authentication and appropriate permissions."
    },
    {
      "name": "Rental Management",
      "item": [
        {
          "name": "Types",
          "item": [
            {
              "name": "Get All Types",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/types",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "types"]
                },
                "description": "Retrieve all rental types available in the system. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Type by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/types/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "types", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Type ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific type including associated transportations."
              },
              "response": []
            },
            {
              "name": "Create Type",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Luxury Cars",
                      "description": "Type name (2-50 characters, must be unique)",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/types",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "types"]
                },
                "description": "Create a new rental type. Requires Admin role. Type names must be unique across the system."
              },
              "response": []
            },
            {
              "name": "Update Type",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Premium Luxury Cars",
                      "description": "Updated type name",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/types/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "types", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Type ID to update"
                    }
                  ]
                },
                "description": "Update an existing rental type. Requires Admin role. Updated name must remain unique."
              },
              "response": []
            },
            {
              "name": "Delete Type",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/types/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "types", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Type ID to delete"
                    }
                  ]
                },
                "description": "Delete a rental type. Requires Admin role. Cannot delete types that have associated transportations."
              },
              "response": []
            }
          ],
          "description": "Rental type management operations"
        },
        {
          "name": "Transportations",
          "item": [
            {
              "name": "Get All Transportations",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/transportations",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "transportations"]
                },
                "description": "Retrieve all rental transportations with type and author information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Transportation by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/transportations/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "transportations", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Transportation ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific transportation including type and author details."
              },
              "response": []
            },
            {
              "name": "Create New Transportation",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n    \"name\": \"Tesla Model S Plaid\",\\n    \"description\": \"Experience the future of luxury transportation with the Tesla Model S Plaid - the fastest production sedan ever created. This all-electric powerhouse combines breathtaking performance with cutting-edge technology and uncompromising luxury.\\\\n\\\\nPerformance Highlights:\\\\n• 0-60 mph in just 1.99 seconds with Plaid powertrain\\\\n• 1,020 horsepower with three electric motors\\\\n• 390+ mile range on a single charge\\\\n• Top speed of 200 mph\\\\n• Advanced air suspension for optimal ride comfort\\\\n\\\\nLuxury Features:\\\\n• 17-inch cinematic display with gaming capabilities\\\\n• Premium sound system with 22 speakers\\\\n• Heated and ventilated seats with massage function\\\\n• Autopilot and Full Self-Driving capability\\\\n• Over-the-air software updates\\\\n• Bioweapon Defense Mode air filtration\\\\n\\\\nPerfect for executive travel, special occasions, or experiencing the pinnacle of electric vehicle technology. Available for daily, weekly, or monthly rentals with premium white-glove service included.\",\\n    \"imgUrl\": \"https://images.unsplash.com/photo-1617788138017-80ad40651399?w=800\",\\n    \"location\": \"Beverly Hills, CA\",\\n    \"price\": 499,\\n    \"typeId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/transportations",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "transportations"]
                },
                "description": "Create a new transportation rental. Requires Staff or Admin role. The transportation will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Transportation",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n    \"name\": \"Tesla Model S Plaid - Track Package\",\\n    \"description\": \"Experience the future of luxury transportation with the Tesla Model S Plaid Track Package - the fastest production sedan ever created with enhanced track-focused features. This all-electric powerhouse combines breathtaking performance with cutting-edge technology and uncompromising luxury.\\\\n\\\\nTrack Package Enhancements:\\\\n• Carbon fiber spoiler and diffuser for increased downforce\\\\n• Track-tuned suspension with adaptive dampers\\\\n• High-performance brake pads and rotors\\\\n• Michelin Pilot Sport Cup 2 tires\\\\n• Track Mode with advanced stability control\\\\n\\\\nPerformance Highlights:\\\\n• 0-60 mph in just 1.99 seconds with Plaid powertrain\\\\n• 1,020 horsepower with three electric motors\\\\n• 390+ mile range on a single charge\\\\n• Top speed of 200 mph\\\\n• Advanced air suspension for optimal ride comfort\\\\n\\\\nLuxury Features:\\\\n• 17-inch cinematic display with gaming capabilities\\\\n• Premium sound system with 22 speakers\\\\n• Heated and ventilated seats with massage function\\\\n• Autopilot and Full Self-Driving capability\\\\n• Over-the-air software updates\\\\n• Bioweapon Defense Mode air filtration\\\\n\\\\nPerfect for track days, executive travel, special occasions, or experiencing the pinnacle of electric vehicle technology. Available for daily, weekly, or monthly rentals with premium white-glove service and track instruction included.\",\\n    \"imgUrl\": \"https://images.unsplash.com/photo-1617788138017-80ad40651399?w=1200\",\\n    \"location\": \"Beverly Hills, CA\",\\n    \"price\": 699,\\n    \"typeId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/transportations/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "transportations", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Transportation ID to update"
                    }
                  ]
                },
                "description": "Update an existing transportation. Requires Staff/Admin role and ownership of the transportation (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Transportation Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/transportations/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "transportations", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Transportation ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the transportation image. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Transportation",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rentals/transportations/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rentals", "transportations", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Transportation ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete a transportation. Requires Staff/Admin role and ownership of the transportation (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "Transportation management operations"
        },
        {
          "name": "Public Rental API",
          "item": [
            {
              "name": "Get Public Transportations (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/rentals/transportations?q=Tesla&i=luxury,economy&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "rentals", "transportations"],
                  "query": [
                    {
                      "key": "q",
                      "value": "Tesla",
                      "description": "Search in transportation names (optional)"
                    },
                    {
                      "key": "i",
                      "value": "luxury,economy",
                      "description": "Filter by type names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Transportations per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated rental transportations for public consumption. Supports search by name, type filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Transportation by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/rentals/transportations/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "rentals", "transportations", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Transportation ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific transportation including type and author information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Types",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/rentals/types",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "rentals", "types"]
                },
                "description": "Retrieve all available rental types for public use. Useful for building type filters and exploring different transportation categories. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for rental content consumption. No authentication required."
        }
      ],
      "description": "Protected rental content management endpoints. Requires authentication and appropriate permissions."
    },
    {
      "name": "Restaurant Management",
      "item": [
        {
          "name": "Categories",
          "item": [
            {
              "name": "Get All Categories",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "categories"]
                },
                "description": "Retrieve all restaurant categories available in the system. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Category by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific category including associated cuisines."
              },
              "response": []
            },
            {
              "name": "Create Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Italian",
                      "description": "Category name (2-100 characters, must be unique)",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "categories"]
                },
                "description": "Create a new restaurant category. Requires Admin role. Category names must be unique across the system."
              },
              "response": []
            },
            {
              "name": "Update Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "Authentic Italian",
                      "description": "Updated category name",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to update"
                    }
                  ]
                },
                "description": "Update an existing restaurant category. Requires Admin role. Updated name must remain unique."
              },
              "response": []
            },
            {
              "name": "Delete Category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/categories/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "categories", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Category ID to delete"
                    }
                  ]
                },
                "description": "Delete a restaurant category. Requires Admin role. Cannot delete categories that have associated cuisines."
              },
              "response": []
            }
          ],
          "description": "Restaurant category management operations"
        },
        {
          "name": "Cuisines",
          "item": [
            {
              "name": "Get All Cuisines",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/cuisines",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "cuisines"]
                },
                "description": "Retrieve all restaurant cuisines with category and author information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Cuisine by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/cuisines/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "cuisines", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Cuisine ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific cuisine including category and author details."
              },
              "response": []
            },
            {
              "name": "Create New Cuisine",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n    \"name\": \"Margherita Pizza\",\\n    \"description\": \"A classic Italian pizza featuring fresh mozzarella, ripe tomatoes, and aromatic basil leaves on a perfectly crispy thin crust. This timeless recipe originated in Naples and remains one of the most beloved pizzas worldwide.\\\\n\\\\nIngredients:\\\\n• Fresh pizza dough made with Italian 00 flour\\\\n• San Marzano tomato sauce with garlic and oregano\\\\n• Fresh mozzarella di bufala\\\\n• Fresh basil leaves\\\\n• Extra virgin olive oil\\\\n• Sea salt and cracked black pepper\\\\n\\\\nCooking Method:\\\\nHand-stretched and baked in our wood-fired oven at 900°F for 90 seconds, creating the perfect balance of crispy crust and melted cheese. The high heat creates characteristic leopard spots on the crust while keeping the center tender.\\\\n\\\\nServed immediately while hot with a drizzle of premium olive oil and fresh basil. A true celebration of simple, high-quality ingredients that showcase the essence of authentic Italian cuisine.\",\\n    \"price\": 18,\\n    \"imgUrl\": \"https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=800\",\\n    \"categoryId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/cuisines",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "cuisines"]
                },
                "description": "Create a new cuisine dish. Requires Staff or Admin role. The cuisine will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Cuisine",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n    \"name\": \"Margherita Pizza - Chef's Special\",\\n    \"description\": \"A classic Italian pizza featuring fresh mozzarella, ripe tomatoes, and aromatic basil leaves on a perfectly crispy thin crust. This timeless recipe originated in Naples and remains one of the most beloved pizzas worldwide.\\\\n\\\\nChef's Special Enhancement:\\\\nNow featuring imported burrata cheese and heirloom tomatoes for an elevated dining experience. Our signature dough is aged 48 hours for enhanced flavor and digestibility.\\\\n\\\\nIngredients:\\\\n• Fresh pizza dough made with Italian 00 flour (48-hour cold fermentation)\\\\n• San Marzano DOP tomato sauce with garlic and oregano\\\\n• Fresh mozzarella di bufala and imported burrata\\\\n• Heirloom tomatoes and fresh basil leaves\\\\n• Extra virgin olive oil from Tuscany\\\\n• Sea salt and cracked black pepper\\\\n\\\\nCooking Method:\\\\nHand-stretched and baked in our wood-fired oven at 900°F for 90 seconds, creating the perfect balance of crispy crust and melted cheese. The high heat creates characteristic leopard spots on the crust while keeping the center tender.\\\\n\\\\nServed immediately while hot with a drizzle of premium olive oil and fresh basil. A true celebration of simple, high-quality ingredients that showcase the essence of authentic Italian cuisine.\",\\n    \"price\": 22,\\n    \"imgUrl\": \"https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=1200\",\\n    \"categoryId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/cuisines/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "cuisines", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Cuisine ID to update"
                    }
                  ]
                },
                "description": "Update an existing cuisine dish. Requires Staff/Admin role and ownership of the cuisine (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Cuisine Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/cuisines/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "cuisines", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Cuisine ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the featured image for a cuisine dish. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Cuisine",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/restaurants/cuisines/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "restaurants", "cuisines", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Cuisine ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete a cuisine dish. Requires Staff/Admin role and ownership of the cuisine (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "Restaurant cuisine management operations"
        },
        {
          "name": "Public Restaurant API",
          "item": [
            {
              "name": "Get Public Cuisines (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/restaurants/cuisines?q=pizza&i=italian,chinese&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "restaurants", "cuisines"],
                  "query": [
                    {
                      "key": "q",
                      "value": "pizza",
                      "description": "Search in cuisine names (optional)"
                    },
                    {
                      "key": "i",
                      "value": "italian,chinese",
                      "description": "Filter by category names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Cuisines per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated restaurant cuisines for public consumption. Supports search by name, category filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Cuisine by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/restaurants/cuisines/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "restaurants", "cuisines", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Cuisine ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific cuisine including category and author information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/restaurants/categories",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "restaurants", "categories"]
                },
                "description": "Retrieve all available restaurant categories for public use. Useful for building category filters and exploring different cuisine types. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for restaurant content consumption. No authentication required."
        }
      ],
      "description": "Protected restaurant content management endpoints. Requires authentication and appropriate permissions."
    },
    {
      "name": "Room Management",
      "item": [
        {
          "name": "Types",
          "item": [
            {
              "name": "Get All Types",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/types",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "types"]
                },
                "description": "Retrieve all room types (e.g., Hotel, Apartment, Resort)"
              },
              "response": []
            },
            {
              "name": "Get Type by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/types/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "types", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Type ID to retrieve"
                    }
                  ]
                },
                "description": "Retrieve a specific room type with all associated lodgings"
              },
              "response": []
            },
            {
              "name": "Create Type",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n  \"name\": \"Resort\"\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/types",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "types"]
                },
                "description": "Create a new room type (Admin only)"
              },
              "response": []
            },
            {
              "name": "Update Type",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n  \"name\": \"Luxury Resort\"\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/types/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "types", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Type ID to update"
                    }
                  ]
                },
                "description": "Update an existing room type (Admin only)"
              },
              "response": []
            },
            {
              "name": "Delete Type",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/types/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "types", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Type ID to delete"
                    }
                  ]
                },
                "description": "Delete a room type (Admin only)"
              },
              "response": []
            }
          ],
          "description": "Room type management operations"
        },
        {
          "name": "Lodgings",
          "item": [
            {
              "name": "Get All Lodgings",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/lodgings",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "lodgings"]
                },
                "description": "Retrieve all lodgings (authenticated users)"
              },
              "response": []
            },
            {
              "name": "Get Lodging by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/lodgings/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "lodgings", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Lodging ID to retrieve"
                    }
                  ]
                },
                "description": "Retrieve a specific lodging by ID"
              },
              "response": []
            },
            {
              "name": "Create Lodging",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n  \"name\": \"Grand Ocean Resort\",\\n  \"facility\": \"Swimming pool, spa, gym, restaurant, Wi-Fi, air conditioning, minibar, room service\",\\n  \"roomCapacity\": 4,\\n  \"imgUrl\": \"https://example.com/ocean-resort.jpg\",\\n  \"location\": \"Bali, Indonesia\",\\n  \"typeId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/lodgings",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "lodgings"]
                },
                "description": "Create a new lodging (Admin/Staff only)"
              },
              "response": []
            },
            {
              "name": "Update Lodging",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\\n  \"name\": \"Grand Ocean Resort & Spa\",\\n  \"facility\": \"Swimming pool, luxury spa, fitness center, fine dining restaurant, free Wi-Fi, air conditioning, minibar, 24/7 room service\",\\n  \"roomCapacity\": 6,\\n  \"imgUrl\": \"https://example.com/ocean-resort-updated.jpg\",\\n  \"location\": \"Nusa Dua, Bali, Indonesia\",\\n  \"typeId\": 1\\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/lodgings/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "lodgings", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Lodging ID to update"
                    }
                  ]
                },
                "description": "Update an existing lodging (Admin/Staff/Owner only)"
              },
              "response": []
            },
            {
              "name": "Update Lodging Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/lodgings/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "lodgings", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Lodging ID to update image for"
                    }
                  ]
                },
                "description": "Upload/update lodging image (Admin/Staff/Owner only)"
              },
              "response": []
            },
            {
              "name": "Delete Lodging",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/rooms/lodgings/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "rooms", "lodgings", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Lodging ID to delete"
                    }
                  ]
                },
                "description": "Delete a lodging (Admin/Staff/Owner only)"
              },
              "response": []
            }
          ],
          "description": "Room lodging management operations"
        },
        {
          "name": "Public Room API",
          "item": [
            {
              "name": "Get Public Lodgings (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/rooms/lodgings?q=resort&i=hotel&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "rooms", "lodgings"],
                  "query": [
                    {
                      "key": "q",
                      "value": "resort",
                      "description": "Search in lodging names (optional)"
                    },
                    {
                      "key": "i",
                      "value": "hotel",
                      "description": "Filter by type names (comma-separated, optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Lodgings per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated room lodgings for public consumption. Supports search by name, type filtering, and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Lodging by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/rooms/lodgings/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "rooms", "lodgings", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Lodging ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific lodging including type and author information. Public access, no authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Types",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/rooms/types",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "rooms", "types"]
                },
                "description": "Retrieve all available room types for public use. Useful for building type filters and exploring different accommodation types. No authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for room content consumption. No authentication required."
        }
      ],
      "description": "Complete suite of room management operations. Types represent accommodation types (e.g., Hotel, Apartment, Resort) while Lodgings are individual properties with facilities, capacity, and location details. Both authenticated admin/staff operations and public browsing are supported."
    },
    {
      "name": "Lecture Management",
      "item": [
        {
          "name": "Movies",
          "item": [
            {
              "name": "Get All Movies",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/lectures/movies",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "lectures", "movies"]
                },
                "description": "Retrieve all anime movies with author information. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Movie by ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/lectures/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "lectures", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Anime ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific anime including author details."
              },
              "response": []
            },
            {
              "name": "Create New Movie",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Demon Slayer: Kimetsu no Yaiba - The Movie: Mugen Train\",\n    \"synopsis\": \"After a string of mysterious disappearances begin to plague a train, the Demon Slayer Corps' multiple attempts to remedy the problem prove fruitless. To prevent further casualties, the Flame Pillar, Kyoujurou Rengoku, takes it upon himself to eliminate the threat. Accompanying him are some of the Corps' most promising new blood: Tanjirou Kamado, Zenitsu Agatsuma, and Inosuke Hashibira, who all hope to witness the fiery feats of this model demon slayer firsthand.\",\n    \"coverUrl\": \"https://cdn.myanimelist.net/images/anime/1704/106947.jpg\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/lectures/movies",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "lectures", "movies"]
                },
                "description": "Create a new anime entry. Requires Staff or Admin role. The anime will be automatically associated with the authenticated user as the author."
              },
              "response": []
            },
            {
              "name": "Update Movie",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Demon Slayer: Kimetsu no Yaiba Infinity Castle\",\n    \"synopsis\": \"Anime movie trilogy adaptation of the Infinity Castle Arc.\",\n    \"coverUrl\": \"https://cdn.myanimelist.net/images/anime/1681/148216.jpg\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/lectures/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "lectures", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Anime ID to update"
                    }
                  ]
                },
                "description": "Update an existing anime entry. Requires Staff/Admin role and ownership of the anime (or Admin override)."
              },
              "response": []
            },
            {
              "name": "Update Movie Image",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "Image file to upload (JPEG, PNG, WebP supported)",
                      "type": "file",
                      "src": "postman-cloud:///1ef44293-f522-4270-9d5c-c46f7ba3b299"
                    }
                  ]
                },
                "url": {
                  "raw": "{{BASE_URL}}/apis/lectures/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "lectures", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Anime ID to update image for"
                    }
                  ]
                },
                "description": "Upload and update the cover image for an anime. Image will be automatically optimized and stored in Cloudinary. Requires ownership or Admin role."
              },
              "response": []
            },
            {
              "name": "Delete Movie",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{TOKEN}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/lectures/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "lectures", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Anime ID to delete"
                    }
                  ]
                },
                "description": "Permanently delete an anime entry. Requires Staff/Admin role and ownership of the anime (or Admin override). This action cannot be undone."
              },
              "response": []
            }
          ],
          "description": "Anime management operations"
        },
        {
          "name": "Public Lecture API",
          "item": [
            {
              "name": "Get Public Movies (Paginated)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/lectures/movies?q=name&limit=8&page=1&sort=DESC",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "lectures", "movies"],
                  "query": [
                    {
                      "key": "q",
                      "value": "name",
                      "description": "Search in anime titles (optional)"
                    },
                    {
                      "key": "limit",
                      "value": "8",
                      "description": "Animes per page (4-12, default: 10)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (min: 1, default: 1)"
                    },
                    {
                      "key": "sort",
                      "value": "DESC",
                      "description": "Sort order: ASC or DESC (default: DESC)"
                    }
                  ]
                },
                "description": "Retrieve paginated anime movies for public consumption. Supports search by title and customizable pagination. No authentication required."
              },
              "response": []
            },
            {
              "name": "Get Public Movie by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/apis/pub/lectures/movies/:id",
                  "host": ["{{BASE_URL}}"],
                  "path": ["apis", "pub", "lectures", "movies", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "1",
                      "description": "Anime ID"
                    }
                  ]
                },
                "description": "Retrieve detailed information for a specific anime including author information. Public access, no authentication required."
              },
              "response": []
            }
          ],
          "description": "Public endpoints for anime content consumption. No authentication required."
        }
      ],
      "description": "Protected lecture content management endpoints. Requires authentication and appropriate permissions. Features anime movie management with full CRUD operations, image upload capabilities, and public browsing APIs."
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{TOKEN}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "TOKEN",
      "value": "",
      "type": "string"
    },
    {
      "key": "EMAIL_ADMIN",
      "value": "admin@mail.com",
      "type": "string"
    },
    {
      "key": "EMAIL_STAFF",
      "value": "staff@mail.com",
      "type": "string"
    },
    {
      "key": "SEED_CODE",
      "value": "your-secret-seed-code",
      "type": "string"
    },
    {
      "key": "BASE_URL",
      "value": "http://localhost:8002",
      "type": "string"
    },
    {
      "key": "BASE_URL",
      "value": "https://h8-phase2-gc.vercel.app",
      "type": "string",
      "disabled": true
    }
  ]
}
